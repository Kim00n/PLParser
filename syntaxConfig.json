{
  "typeOfTokens":[
    {
      "type": "num",
      "pattern": "([0-9]+[\\.]?[0-9]*)"
    },{
      "type": "op",
      "pattern":"([:=!+><]{1,2}|[\\-](?!\\-))"
    },{
      "type": "sep",
      "pattern":"(?:([\\()\\,])|([\\|]{2}))"
    },{
      "type": "id",
      "pattern": "(([\\.]?[a-zA-Z\\*][a-zA-Z0-9_#\\*\\%]*[\\.]?)*(\\\"[^\\\"]*\\\")?)"
    },{
      "type": "blk",
      "pattern":"([ \\n\\t\\f\\r]+)"
    },{
      "type":"strDef",
      "pattern":"(\\\"[^\\\"]*\\\")"
    },{
      "type":"str",
      "pattern":"((?<!['])['])(([^'])|(''))*(['](?!'))"
    },{
      "type":"comment",
      "pattern":"((--[^\\n]+)|(\\\/\\*((.|\\n)(?!\\*\\\/))*(.|\\n)(\\*\\\/)))"
    },{
      "type":"EOStatement",
      "pattern":"([;\\\/])"
    },{
      "type":"NoMatch",
      "pattern":"([^ ]*)"
    }
  ],
  "syntaxRules":[
    {
      "name": "package_declaration",
      "pattern": "create or replace package body (@package_name .id) (is|as)",
      "ignore":".blk"
    },{
      "name": "type_declaration",
      "pattern": "type (@type_name .id) is (<type_decl_record>|<type_decl_table>) ';'",
      "ignore":".blk"
    },{
      "name": "type_decl_record",
      "pattern": "record '(' .id .id ')'",
      "ignore":".blk"
    },{
      "name": "type_decl_table",
      "pattern": "table of .id (index by .id)",
      "ignore":".blk"
    },{
      "name": "cursor_declaration",
      "pattern": "cursor (@cursor_name .id) '(' !')'* ')' is",
      "ignore":".blk"
    },{
      "name": "variable_declaration",
      "pattern": "(@variable_name .id) (@variable_type .id) ';'",
      "ignore":".blk"
    }
  ]
}